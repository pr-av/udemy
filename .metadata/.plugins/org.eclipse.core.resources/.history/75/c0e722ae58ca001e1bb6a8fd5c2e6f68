package com.example.demo.Config;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Iterator;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


public class ExcelReader {
	
	
	private static String getApartmentUrl(String filePath, int targetId) throws IOException {
        FileInputStream fileInputStream = new FileInputStream(new File(filePath));
        Workbook workbook = new XSSFWorkbook(fileInputStream);
        Sheet sheet = workbook.getSheetAt(0); // Assuming data is in the first sheet

        int idColumnIndex = 0; // Assuming the ApartmentId column is the first column (0-indexed)
        int urlColumnIndex = 2; // Assuming the ApartmentUrl column is the third column

        Iterator<Row> rowIterator = sheet.iterator();
        rowIterator.next(); // Skip header row

        while (rowIterator.hasNext()) {
            Row row = rowIterator.next();
            Cell idCell = row.getCell(idColumnIndex, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);
            if (idCell != null && idCell.getCellType() == CellType.NUMERIC) {
                int currentId = (int) idCell.getNumericCellValue();
                if (currentId == targetId) {
                    Cell urlCell = row.getCell(urlColumnIndex, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);

                    return (urlCell != null) ? urlCell.getStringCellValue() : "";
                }
            }
        }

        workbook.close();
        fileInputStream.close();
        return null; // Return null if the ApartmentId is not found
    }
}


