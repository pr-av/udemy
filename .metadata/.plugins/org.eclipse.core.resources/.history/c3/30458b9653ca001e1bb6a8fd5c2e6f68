package com.example.demo.Config;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.List;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


public class ExcelReader {
	
	
	 public static String getApartmentUrl(String filePath, int targetId) throws IOException {
	        FileInputStream fileInputStream = new FileInputStream(new File(filePath));
	        Workbook workbook = new XSSFWorkbook(fileInputStream);
	        Sheet sheet = workbook.getSheetAt(0); // Assuming data is in the first sheet

	        int idColumnIndex = 0; // Assuming the ApartmentId column is the first column (0-indexed)
	        int urlColumnIndex = 2; // Assuming the ApartmentUrl column is the third column

	        List<Row> rows = ((List<Row>) sheet).subList(1, sheet.getLastRowNum() + 1); // Exclude header row

	        for (Row row : rows) {
	            Cell idCell = row.getCell(idColumnIndex, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);
	            if (idCell != null && idCell.getCellType() == CellType.NUMERIC) {
	                int currentId = (int) idCell.getNumericCellValue();
	                if (currentId == targetId) {
	                    Cell urlCell = row.getCell(urlColumnIndex, Row.MissingCellPolicy.RETURN_BLANK_AS_NULL);

	                    return (urlCell != null) ? urlCell.getStringCellValue() : "";
	                }
	            }
	        }

	        workbook.close();
	        fileInputStream.close();
	        return null; // Return null if the ApartmentId is not found
	    }
}

